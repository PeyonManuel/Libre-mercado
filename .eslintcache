[{"C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\index.js":"1","C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\reportWebVitals.js":"2","C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\store.js":"3","C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\App.js":"4","C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Components\\EmailValidationRoute.js":"5","C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Components\\Footers\\SimpleFooter.js":"6","C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Components\\EnterPassRoute.js":"7","C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Screens\\EnterPassScreen.js":"8","C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Reducers\\userReducers.js":"9","C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Components\\Headers\\Header.js":"10","C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Screens\\NewProductScreen.js":"11","C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Screens\\LoginScreen.js":"12","C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Components\\Headers\\EmptyHeader.js":"13","C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Reducers\\productReducers.js":"14","C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Screens\\RegisterScreen.js":"15","C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Reducers\\categoryReducers.js":"16","C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Screens\\ProductScreen.js":"17","C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Components\\Headers\\LessHeader.js":"18","C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Screens\\HomeScreen.js":"19","C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Screens\\DraftsScreen.js":"20","C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Screens\\EmailValidationScreen.js":"21","C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Components\\PrivateRoute.js":"22","C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Screens\\AddressScreen.js":"23","C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Components\\NotLogedRoute.js":"24","C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Screens\\PostScreen.js":"25","C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Components\\MessageBox.js":"26","C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Components\\Product.js":"27","C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Components\\Rating.js":"28","C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Actions\\userActions.js":"29","C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Actions\\productActions.js":"30","C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Utils\\Utilities.js":"31","C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Actions\\categoryActions.js":"32"},{"size":616,"mtime":1618239848000,"results":"33","hashOfConfig":"34"},{"size":362,"mtime":1618239848000,"results":"35","hashOfConfig":"34"},{"size":1992,"mtime":1618239848000,"results":"36","hashOfConfig":"34"},{"size":3706,"mtime":1618239848000,"results":"37","hashOfConfig":"34"},{"size":414,"mtime":1618239848000,"results":"38","hashOfConfig":"34"},{"size":352,"mtime":1618239848000,"results":"39","hashOfConfig":"34"},{"size":492,"mtime":1618239848000,"results":"40","hashOfConfig":"34"},{"size":4327,"mtime":1618239848000,"results":"41","hashOfConfig":"34"},{"size":4727,"mtime":1618239848000,"results":"42","hashOfConfig":"34"},{"size":16495,"mtime":1618239848000,"results":"43","hashOfConfig":"34"},{"size":40862,"mtime":1618239848000,"results":"44","hashOfConfig":"34"},{"size":4313,"mtime":1618239848000,"results":"45","hashOfConfig":"34"},{"size":768,"mtime":1618239848000,"results":"46","hashOfConfig":"34"},{"size":1177,"mtime":1618239848000,"results":"47","hashOfConfig":"34"},{"size":14683,"mtime":1618680442996,"results":"48","hashOfConfig":"34"},{"size":411,"mtime":1618239848000,"results":"49","hashOfConfig":"34"},{"size":13075,"mtime":1618239848000,"results":"50","hashOfConfig":"34"},{"size":8918,"mtime":1618239848000,"results":"51","hashOfConfig":"34"},{"size":3110,"mtime":1618239848000,"results":"52","hashOfConfig":"34"},{"size":4627,"mtime":1618239848000,"results":"53","hashOfConfig":"34"},{"size":8334,"mtime":1618680601528,"results":"54","hashOfConfig":"34"},{"size":567,"mtime":1618239848000,"results":"55","hashOfConfig":"34"},{"size":10935,"mtime":1618239848000,"results":"56","hashOfConfig":"34"},{"size":474,"mtime":1618239848000,"results":"57","hashOfConfig":"34"},{"size":25435,"mtime":1618239848000,"results":"58","hashOfConfig":"34"},{"size":204,"mtime":1618239848000,"results":"59","hashOfConfig":"34"},{"size":2939,"mtime":1618239848000,"results":"60","hashOfConfig":"34"},{"size":1383,"mtime":1618239848000,"results":"61","hashOfConfig":"34"},{"size":7454,"mtime":1618239848000,"results":"62","hashOfConfig":"34"},{"size":1621,"mtime":1618239848000,"results":"63","hashOfConfig":"34"},{"size":314,"mtime":1618239848000,"results":"64","hashOfConfig":"34"},{"size":482,"mtime":1618239848000,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"owjb99",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"68"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"68"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"68"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\index.js",[],["136","137"],"C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\reportWebVitals.js",[],"C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\store.js",[],"C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\App.js",[],"C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Components\\EmailValidationRoute.js",[],"C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Components\\Footers\\SimpleFooter.js",[],"C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Components\\EnterPassRoute.js",[],"C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Screens\\EnterPassScreen.js",[],"C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Reducers\\userReducers.js",[],"C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Components\\Headers\\Header.js",[],"C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Screens\\NewProductScreen.js",["138","139"],"import React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listCategories } from '../Actions/categoryActions';\nimport { detailsUser, updateProductDrafts } from '../Actions/userActions';\nimport { move } from 'move-position';\nimport MessageBox from '../Components/MessageBox';\nimport { formatNumber } from '../Utils/Utilities';\n\nconst NewProductScreen = (props) => {\n  const urlParams = new URLSearchParams(props.location.search);\n  const categoryList = useSelector((state) => state.categoryList);\n  const { loading, error, categories } = categoryList;\n  const userLogin = useSelector((state) => state.userLogin);\n  const { user } = userLogin;\n  const userDetails = useSelector((state) => state.userDetails);\n  const {\n    loading: loadingDetails,\n    error: detailsError,\n    user: details,\n  } = userDetails;\n  const userUpdateProductDrafts = useSelector(\n    (state) => state.userUpdateProductDrafts\n  );\n  const {\n    loading: updateLoading,\n    error: updateError,\n  } = userUpdateProductDrafts;\n  const draftId = urlParams.get('draft');\n  const [cacheValues, setCacheValues] = useState('');\n  const [searchSell, setSearchSell] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState(null);\n  const [isStateNew, setIsStateNew] = useState(null);\n  const [images, setImages] = useState([]);\n  const [percentage, setPercentage] = useState(-1);\n  const [quantity, setQuantity] = useState(\n    cacheValues ? cacheValues.stock : ''\n  );\n  const [searchError, setSearchError] = useState(false);\n  const [imageError, setImageError] = useState('');\n  const [quantityError, setQuantityError] = useState('');\n  const [showHelpSign, setShowHelpSign] = useState(false);\n  const [showChangeCategorySign, setShowChangeCategorySign] = useState(false);\n  const [updatingImages, setUpdatingImages] = useState(false);\n  const wrapperRef = useRef(null);\n  const wrapperRefHelpSign = useRef(null);\n  const wrapperRefCategorySign = useRef(null);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      const { current: wrap } = wrapperRef;\n      if (wrap && !wrap.contains(event.target)) {\n        document.querySelector('.searchbar-sell').classList.remove('focused');\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    const handleClickOutsideHelpSign = (event) => {\n      const { current: wrapSign } = wrapperRefHelpSign;\n      if (wrapSign && !wrapSign.contains(event.target)) {\n        document.querySelector('#help-sign').classList.add('hidden');\n        setTimeout(() => {\n          setShowHelpSign(false);\n        }, 500);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutsideHelpSign);\n    const handleClickOutsideCategorySign = (event) => {\n      const { current: wrapSign } = wrapperRefCategorySign;\n      if (wrapSign && !wrapSign.contains(event.target)) {\n        document.querySelector('#change-category-cancelbtn').click();\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutsideCategorySign);\n\n    const handleScroll = () => {\n      if (window.scrollY >= 160) {\n        if (document.querySelector('.new-product-steps'))\n          document.querySelector('.new-product-steps').style.transform =\n            'translateY(5.5rem)';\n      } else {\n        if (document.querySelector('.new-product-steps'))\n          document.querySelector('.new-product-steps').style.transform =\n            'translateY(0)';\n      }\n    };\n    document.addEventListener('scroll', handleScroll);\n    const preventDragAndDrop = (e) => {\n      e.preventDefault();\n    };\n    window.addEventListener('dragover', preventDragAndDrop, false);\n    window.addEventListener('drop', preventDragAndDrop, false);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutsideCategorySign);\n      document.removeEventListener('mousedown', handleClickOutsideHelpSign);\n      document.removeEventListener('mousedown', handleClickOutside);\n      document.removeEventListener('scroll', handleScroll);\n      window.removeEventListener('drop', preventDragAndDrop);\n      window.removeEventListener('dragover', preventDragAndDrop);\n    };\n  }, []);\n\n  useEffect(() => {\n    dispatch(detailsUser(user._id));\n  }, [user, dispatch]);\n\n  useEffect(() => {\n    if (cacheValues === '') {\n      setCacheValues(\n        draftId\n          ? details &&\n            details.productDrafts.find(\n              (productDraft) => productDraft._id === draftId\n            )\n            ? details.productDrafts.find(\n                (productDraft) => productDraft._id === draftId\n              )\n            : ''\n          : ''\n      );\n    }\n  }, [details, draftId, cacheValues]);\n\n  useEffect(() => {\n    if (draftId === null) {\n      setCacheValues('');\n      setPercentage(0);\n    }\n  }, [draftId]);\n\n  useEffect(() => {\n    setSearchSell(cacheValues ? cacheValues.name : '');\n    setSelectedCategory(cacheValues ? cacheValues.category : null);\n    setIsStateNew(cacheValues ? cacheValues.isStateNew : null);\n    setImages(cacheValues ? cacheValues.images : []);\n    setPercentage(\n      cacheValues !== ''\n        ? cacheValues.name !== ''\n          ? cacheValues.category !== null\n            ? cacheValues.isStateNew !== null\n              ? cacheValues.images && cacheValues.images.length > 0\n                ? 100\n                : 67\n              : 33\n            : 16.5\n          : 0\n        : 0\n    );\n    setQuantity(cacheValues ? cacheValues.stock : '');\n  }, [cacheValues]);\n\n  useEffect(() => {\n    switch (percentage) {\n      case 0:\n        document.querySelector('#first-step') &&\n          document.querySelector('#first-step').scrollIntoView();\n        break;\n      case 16.5:\n        document.querySelector('#first-step') &&\n          document.querySelector('#first-step').scrollIntoView();\n        break;\n      case 33:\n        if (!updateLoading && !updateError) {\n          document.querySelector('#second-step') &&\n            document.querySelector('#second-step').scrollIntoView();\n        }\n        break;\n      case 67:\n        !updateLoading &&\n          !updateError &&\n          document.querySelector('#third-step') &&\n          document.querySelector('#third-step').scrollIntoView();\n        setImageError('');\n        setQuantityError('');\n        break;\n      case 100:\n        !updateLoading &&\n          !updateError &&\n          window.scrollTo(0, document.body.scrollHeight);\n        break;\n      default:\n        break;\n    }\n  }, [percentage, updateLoading, updateError]);\n\n  useEffect(() => {\n    const newDraftId = () => {\n      if (\n        percentage >= 33 &&\n        draftId === null &&\n        details &&\n        details.productDrafts[details.productDrafts.length - 1]\n      ) {\n        props.history.push(\n          'producto?draft=' +\n            details.productDrafts[details.productDrafts.length - 1]._id\n        );\n      }\n    };\n    newDraftId();\n  }, [details]);\n\n  useEffect(() => {\n    showHelpSign &&\n      document.querySelector('#help-sign').classList.remove('hidden');\n    showHelpSign\n      ? (document.querySelector('body').style.overflow = 'hidden')\n      : (document.querySelector('body').style.overflow = 'auto');\n  }, [showHelpSign]);\n\n  useEffect(() => {\n    showChangeCategorySign &&\n      document\n        .querySelector('#change-category-sign')\n        .classList.remove('hidden');\n    showChangeCategorySign\n      ? (document.querySelector('body').style.overflow = 'hidden')\n      : (document.querySelector('body').style.overflow = 'auto');\n  }, [showChangeCategorySign]);\n\n  useEffect(() => {\n    percentage >= 16.5 &&\n      categories &&\n      categories.length < 1 &&\n      dispatch(listCategories());\n  }, [dispatch, percentage, categories]);\n\n  useEffect(() => {\n    if (cacheValues !== '') {\n      if (updateLoading && !updateError) {\n        if (\n          cacheValues.isStateNew === true ||\n          cacheValues.isStateNew === false\n        ) {\n          if (\n            cacheValues.images &&\n            cacheValues.images.length > 0 &&\n            parseInt(quantity) > 0 &&\n            !updatingImages\n          ) {\n            setPercentage(100);\n          } else {\n            setPercentage(67);\n            setIsStateNew(cacheValues.isStateNew);\n          }\n        } else {\n          setPercentage(33);\n        }\n      }\n    }\n  }, [updateLoading, updateError, cacheValues, quantity, updatingImages]);\n\n  const CheckDimension = (file) => {\n    var reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = function (e) {\n      var image = new Image();\n      image.src = e.target.result;\n      image.onload = function () {\n        var height = this.height;\n        var width = this.width;\n        if (height < 500 || width < 500) {\n          addErrorToImageList(\n            reader.result,\n            '- El tamaño es menor a 500 x 500 px.'\n          );\n        } else {\n          setPercentage(67);\n          setImages((images) => [...images, this.src]);\n        }\n      };\n    };\n  };\n  const firstStepHeader = () => (\n    <div className='screen-mini-card-header'>\n      {' '}\n      <a\n        className='sell-back-to-search-btn'\n        href='#back'\n        onClick={(e) => {\n          e.preventDefault();\n          setPercentage(0);\n          setSelectedCategory(null);\n        }}\n      >\n        Volver a buscar\n      </a>\n    </div>\n  );\n\n  const firstStepSearch = () => (\n    <>\n      <div className='row' style={{ marginBottom: '1rem' }}>\n        {' '}\n        <div className='searchbar-sell'>\n          <i className='fa fa-search'></i>\n          <input\n            autoFocus\n            maxLength='120'\n            value={searchSell}\n            onKeyDown={(e) => {\n              if (e.keyCode === 13) {\n                if (searchSell.trim().length > 0) {\n                  setSelectedCategory(null);\n                  setPercentage(16.5);\n                } else {\n                  setSearchError(true);\n                }\n              }\n            }}\n            onChange={(e) => {\n              setSearchSell(e.target.value);\n              setSearchError(false);\n            }}\n            ref={wrapperRef}\n            onFocus={() => {\n              document\n                .querySelector('.searchbar-sell')\n                .classList.add('focused');\n            }}\n            type='text'\n            placeholder='Ej.: Celular Samsung Galaxy S9 64 GB Negro o 887276246529'\n          ></input>\n          <i\n            className='fas fa-times gray'\n            onClick={() => setSearchSell('')}\n          ></i>\n        </div>\n        <div\n          className={\n            'search-sell-subtext subtle-text' + (searchError ? ' error' : '')\n          }\n        >\n          {!searchError\n            ? 'Sumá las características principales del producto para mejorar la búsqueda.'\n            : 'Para comenzar, indicá el producto que querés publicar.'}\n        </div>\n        <button\n          className='primary margin-left'\n          style={{ width: '10rem' }}\n          onClick={() => {\n            if (searchSell.trim().length > 0) {\n              setSelectedCategory(null);\n              setPercentage(16.5);\n            } else {\n              setSearchError(true);\n            }\n          }}\n        >\n          Comenzar\n        </button>\n      </div>\n    </>\n  );\n  const firstStepSelectCategory = () => (\n    <>\n      {selectedCategory === null && percentage >= 16.5 && (\n        <div className='sell-categories-list-container'>\n          <ul className='sell-categories-list'>\n            {categories.map((category) => {\n              return (\n                <li key={category._id}>\n                  <button\n                    onClick={() => {\n                      setSelectedCategory(category._id);\n                    }}\n                  >\n                    {category.name}\n                    <i className='fas fa-angle-right absolute-right'></i>\n                  </button>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      )}\n      {selectedCategory !== null &&\n        (categories &&\n        categories.find((category) => category._id === selectedCategory) ? (\n          <div className='column' style={{ gap: '2rem' }}>\n            {' '}\n            <span className='selected-category-sell'>\n              <img\n                src={\n                  categories.find(\n                    (category) => category._id === selectedCategory\n                  ).svg\n                }\n                onLoad={() => {\n                  document.querySelector(\n                    '#selected-category-name'\n                  ).style.display = 'flex';\n                }}\n                alt={\n                  categories.find(\n                    (category) => category._id === selectedCategory\n                  ).name + 'logo'\n                }\n              ></img>\n              <span className='column' id='selected-category-name' hidden>\n                <span>\n                  {\n                    categories.find(\n                      (category) => category._id === selectedCategory\n                    ).name\n                  }\n                </span>\n                {percentage >= 33 && (\n                  <a\n                    href='#cambiar-categoria'\n                    onClick={() => {\n                      setSelectedCategory(null);\n                      setPercentage(16.5);\n                    }}\n                  >\n                    Elegir otra\n                  </a>\n                )}\n              </span>\n            </span>\n            {percentage <= 33 && (\n              <span>\n                Es muy importante que la categoría sea la apropiada para que tus\n                compradores encuentren tu producto. Si no lo es, podríamos\n                pedirte que vuelvas a publicar.\n              </span>\n            )}\n          </div>\n        ) : (\n          <div className='screen-mini-card medium'>\n            <MessageBox variant='danger'>\n              Se ha producido un error, por favor vuelva a empezar\n            </MessageBox>\n          </div>\n        ))}\n    </>\n  );\n  const firstStepFooter = () => (\n    <div className='screen-mini-card-footer flex-end'>\n      <button\n        className='primary'\n        onClick={() => {\n          if (\n            cacheValues === '' ||\n            cacheValues.category === null ||\n            cacheValues.category === selectedCategory\n          ) {\n            setCacheValues({\n              name: searchSell,\n              category: selectedCategory,\n              images: [],\n            });\n            dispatch(\n              updateProductDrafts({\n                name: searchSell,\n                category: selectedCategory,\n                _id: draftId ? draftId : null,\n              })\n            );\n          } else {\n            setShowChangeCategorySign(true);\n          }\n        }}\n      >\n        Confirmar\n      </button>\n    </div>\n  );\n\n  const secondStep = (status) => (\n    <div\n      id='second-step'\n      className={\n        'screen-mini-card medium' + (status === 'disabled' ? ' disabled' : '')\n      }\n    >\n      <div className='screen-mini-card-header-title'>\n        <h2>¿Cuál es la condición de tu producto?</h2>\n      </div>\n      <ul>\n        <li\n          className={\n            'sell-stateBtn-nuevo multiple-selection-btn' +\n            (isStateNew === true ? ' selected' : '')\n          }\n        >\n          <button\n            className='list-item padding'\n            onClick={() => {\n              if (isStateNew !== true) {\n                setIsStateNew(true);\n                setCacheValues({\n                  ...cacheValues,\n                  isStateNew: true,\n                });\n                dispatch(\n                  updateProductDrafts({\n                    ...cacheValues,\n                    isStateNew: true,\n                    _id: draftId ? draftId : null,\n                  })\n                );\n              }\n            }}\n          >\n            Nuevo\n          </button>\n        </li>\n        <li\n          className={\n            'sell-stateBtn-usado multiple-selection-btn' +\n            (isStateNew === false ? ' selected' : '')\n          }\n        >\n          <button\n            className='list-item padding'\n            onClick={() => {\n              if (isStateNew !== false) {\n                setIsStateNew(false);\n                setCacheValues({\n                  ...cacheValues,\n                  isStateNew: false,\n                });\n                dispatch(\n                  updateProductDrafts({\n                    ...cacheValues,\n                    name: searchSell,\n                    category: selectedCategory,\n                    isStateNew: false,\n                    images,\n                    _id: draftId ? draftId : null,\n                  })\n                );\n              }\n            }}\n          >\n            Usado\n          </button>\n        </li>\n      </ul>\n    </div>\n  );\n\n  const thirdStep = (status) => (\n    <div\n      id='third-step'\n      className={\n        'screen-mini-card medium' + (status === 'disabled' ? ' disabled' : '')\n      }\n    >\n      <div className='screen-mini-card-header-title'>\n        <h2>Completá la información de tu producto</h2>\n        <button\n          className='hover-btn absolute-right'\n          onClick={() => {\n            setShowHelpSign(true);\n          }}\n        >\n          <img\n            className='smaller'\n            src='https://svgshare.com/i/UKg.svg'\n            alt='Ayuda'\n          ></img>\n        </button>\n      </div>\n      <div className='screen-mini-card-body padding column'>\n        <div className='message-div blue row'>\n          <p className='paragraph-with-icon bold'>\n            <img\n              src='https://svgshare.com/i/UNm.svg'\n              alt='tip'\n              className='absolute-left-top circle badge'\n            />\n            Para no perder exposición, asegúrate de que la primera foto tenga\n            fondo blanco puro creado con un editor de imágenes. No agregues\n            bordes, logos ni marcas de agua.\n            <a href='#masconsejos'>Ver más consejos.</a>\n          </p>\n        </div>\n\n        <div\n          className={'message-div red row' + (!imageError ? ' no-display' : '')}\n        >\n          <div className='width-100 relative'>\n            <p className='paragraph-with-icon bold'>\n              <img\n                src='https://svgshare.com/i/UQW.svg'\n                alt='tip'\n                className='absolute-left-top circle badge'\n              />\n              {imageError}\n            </p>\n            {imageError.includes('no cumple los requisitos') && (\n              <button\n                className='simple absolute-right '\n                onClick={(e) => {\n                  const text = document.querySelector('#revisar-btn-text');\n                  text.innerHTML =\n                    text.innerHTML === 'Revisar ' ? 'Ocultar ' : 'Revisar ';\n\n                  document\n                    .querySelector('#revisar-btn-angle')\n                    .classList.toggle('upside-down');\n                  document\n                    .querySelector('.message-div.red')\n                    .classList.toggle('height-auto');\n                }}\n              >\n                <span id='revisar-btn-text'>Revisar </span>\n                <i id='revisar-btn-angle' className='fas fa-angle-down'></i>\n              </button>\n            )}\n          </div>\n          <div className='message-div-content'>\n            <ul id='error-list' className='width-100'></ul>\n          </div>\n        </div>\n\n        <div\n          className={\n            'image-upload-images-container' +\n            (images.length > 0 ? ' with-scroll' : '')\n          }\n        >\n          <ul\n            className={\n              'image-slider row flex-start gap-1' +\n              (images.length > 0 ? ' fit-content' : '')\n            }\n          >\n            <div\n              className={\n                'upload-image-div center column' +\n                (images.length > 0 ? ' in-slider' : '')\n              }\n              role='button'\n              onClick={() => {\n                document.querySelector('#inputfile').click();\n              }}\n              onDragEnter={(e) => {\n                document\n                  .querySelector('.upload-image-div')\n                  .classList.add('on-drag');\n              }}\n              onDragLeave={(e) => {\n                document\n                  .querySelector('.upload-image-div')\n                  .classList.remove('on-drag');\n              }}\n              onDrop={(e) => {\n                document\n                  .querySelector('.upload-image-div')\n                  .classList.remove('on-drag');\n                if (e.dataTransfer.files.length + images.length <= 10) {\n                  document.querySelector('#error-list').innerHTML = '';\n                  for (var i = 0; i < e.dataTransfer.files.length; i++) {\n                    if (e.dataTransfer.files[i].size / 1000000 <= 5) {\n                      const dataType = e.dataTransfer.files[i].type;\n                      if (\n                        dataType.includes('image/jpeg') ||\n                        dataType.includes('image/png')\n                      ) {\n                        CheckDimension(e.dataTransfer.files[i]);\n                      } else {\n                        addErrorToImageList(\n                          'https://svgshare.com/i/UYj.svg',\n                          '- El formato no es JPG o PNG.'\n                        );\n                      }\n                    } else {\n                      addErrorToImageList(\n                        'https://svgshare.com/i/UYj.svg',\n                        '- El archivo pesa mas de 5mb'\n                      );\n                    }\n                  }\n                  if (document.querySelector('#error-list').innerHTML === '')\n                    setImageError('');\n                } else {\n                  document.querySelector('.message-div.red') &&\n                    document\n                      .querySelector('.message-div.red')\n                      .classList.remove('height-auto');\n                  document.querySelector('#error-list').innerHTML = '';\n                  setImageError('Puedes subir como máximo 10 fotos.');\n                }\n              }}\n            >\n              <img src='https://svgshare.com/i/UPJ.svg' alt='camara' />\n              <span\n                className={\n                  images.length > 0 ? 'small-text bold' : 'subtle-text'\n                }\n              >\n                Agrega o arrastra tus\n                <br /> fotos aquí\n              </span>\n              <input\n                style={{ display: 'none' }}\n                id='inputfile'\n                type='file'\n                accept='image/x-png,image/jpeg,image/jpg'\n                onChange={(e) => {\n                  if (e.target.files.length + images.length <= 10) {\n                    document.querySelector('#error-list').innerHTML = '';\n                    for (var i = 0; i < e.target.files.length; i++) {\n                      if (e.target.files[i].size / 1000000 <= 5) {\n                        const dataType = e.target.files[i].type;\n                        if (\n                          dataType.includes('image/jpeg') ||\n                          dataType.includes('image/png')\n                        ) {\n                          CheckDimension(e.target.files[i]);\n                        } else {\n                          addErrorToImageList(\n                            'https://svgshare.com/i/UYj.svg',\n                            '- El formato no es JPG o PNG.'\n                          );\n                        }\n                      } else {\n                        addErrorToImageList(\n                          'https://svgshare.com/i/UYj.svg',\n                          '- El archivo pesa mas de 5mb'\n                        );\n                      }\n                    }\n                    if (document.querySelector('#error-list').innerHTML === '')\n                      setImageError('');\n                  } else {\n                    document.querySelector('.message-div.red') &&\n                      document\n                        .querySelector('.message-div.red')\n                        .classList.remove('height-auto');\n                    document.querySelector('#error-list').innerHTML = '';\n                    setImageError('Puedes subir como máximo 10 fotos.');\n                  }\n                  e.target.value = '';\n                }}\n                multiple\n              ></input>\n            </div>\n            {images &&\n              images.length > 0 &&\n              images.map((image, i) => {\n                return (\n                  <li className='image-slider-item' key={i}>\n                    <img className='center-cropped' src={image} alt='Subida' />\n                    {i === 0 && (\n                      <div className='absolute-bottom width-100 cover-page'>\n                        <h3>Portada</h3>\n                      </div>\n                    )}\n                    <div className='image-slider-item-options'>\n                      <button\n                        className='image-slider-arrow-btn'\n                        onClick={() => {\n                          setPercentage(67);\n                          setUpdatingImages(true);\n                          setImages(move(images, i, i - 1, false));\n                        }}\n                      >\n                        <i className='fas fa-caret-left'></i>\n                      </button>\n                      <button\n                        className='image-slider-del-btn'\n                        onClick={() => {\n                          setPercentage(67);\n                          setUpdatingImages(true);\n                          setImages((images) => [\n                            ...images.slice(0, i),\n                            ...images.slice(i + 1),\n                          ]);\n                        }}\n                      >\n                        <img\n                          src='https://svgshare.com/i/Ucx.svg'\n                          alt='boton borrar'\n                        ></img>\n                      </button>\n                      <button\n                        className='image-slider-arrow-btn'\n                        onClick={() => {\n                          setPercentage(67);\n                          setUpdatingImages(true);\n                          setImages(move(images, i, i + 1, false));\n                        }}\n                      >\n                        <i className='fas fa-caret-right'></i>\n                      </button>\n                    </div>\n                  </li>\n                );\n              })}\n          </ul>\n        </div>\n        <div className='wrapper sell'>\n          <div className='underline-label-input'>\n            <input\n              type='text'\n              maxLength='5'\n              className={quantityError ? 'error' : ''}\n              value={quantity > 0 ? formatNumber(quantity) : ''}\n              onChange={(e) => {\n                setQuantity(e.target.value.split('.').join(''));\n                if (e.target.value.length === 0 || e.target.value === '0') {\n                  setQuantityError('La cantidad mínima es 1.');\n                } else {\n                  setPercentage(67);\n                  setUpdatingImages(true);\n                  setQuantityError('');\n                }\n              }}\n              onKeyDown={(e) => {\n                if (\n                  !(\n                    (e.keyCode >= 48 && e.keyCode <= 57) ||\n                    e.keyCode === 8 ||\n                    e.keyCode === 37 ||\n                    e.keyCode === 39 ||\n                    e.keyCode === 46\n                  )\n                )\n                  e.preventDefault();\n              }}\n            ></input>\n            <div\n              className={'underline' + (quantityError ? ' error' : '')}\n            ></div>\n            <label>Cantidad</label>\n            <span\n              className={\n                'subtle-text' + (quantityError ? ' error' : ' noerror')\n              }\n            >\n              {quantityError && quantityError}\n            </span>\n          </div>\n        </div>\n      </div>\n      {percentage < 100 && (\n        <div className='screen-mini-card-footer flex-end'>\n          <button className='secondary' onClick={() => setImages([])}>\n            Cancelar\n          </button>\n          <button\n            className='primary'\n            onClick={() => {\n              if (images.length > 0) {\n                if (quantity !== '' && parseInt(quantity) > 0) {\n                  setCacheValues({\n                    ...cacheValues,\n                    images,\n                    stock: parseInt(quantity),\n                  });\n                  dispatch(\n                    updateProductDrafts({\n                      ...cacheValues,\n                      images,\n                      stock: parseInt(quantity),\n                      _id: draftId ? draftId : null,\n                    })\n                  );\n                  setUpdatingImages(false);\n                } else {\n                  setQuantityError('La cantidad mínima es 1.');\n                }\n              } else {\n                setImageError('Agregá al menos una foto.');\n                if (quantity === '' || parseInt(quantity) === 0) {\n                  setQuantityError('La cantidad mínima es 1.');\n                }\n              }\n            }}\n          >\n            Confirmar\n          </button>\n        </div>\n      )}\n    </div>\n  );\n\n  const helpSign = () => (\n    <div id='help-sign' className='modal-bg hidden center'>\n      <div className='screen-mini-card medium' ref={wrapperRefHelpSign}>\n        <div className='screen-mini-card-header-title'>\n          <h1>Sacá las mejores fotos para no perder exposición</h1>\n          <i\n            className='fas fa-times absolute-right less-right blue'\n            onClick={() => {\n              document.querySelector('#help-sign').classList.add('hidden');\n              setTimeout(() => {\n                setShowHelpSign(false);\n              }, 500);\n            }}\n          ></i>\n        </div>\n        <div className='screen-mini-card-body padding'>\n          <div className='half-body'>\n            <p className='paragraph-with-icon bold'>\n              <img\n                src='https://svgshare.com/i/ULR.svg'\n                className='very-small absolute-left-top'\n                alt='check'\n              />\n              Utilizá un editor de imágenes para crear un fondo blanco puro para\n              tu producto. No publiques fotos de tu producto frente una pared u\n              otro elemento.\n            </p>\n            <p className='paragraph-with-icon bold'>\n              <img\n                src='https://svgshare.com/i/ULR.svg'\n                className='very-small absolute-left-top'\n                alt='check'\n              />\n              No le agregues bordes, logos, marcas de agua, banners ni textos\n              promocionales.\n            </p>\n            <p className='paragraph-with-icon bold'>\n              <img\n                src='https://svgshare.com/i/ULR.svg'\n                className='very-small absolute-left-top'\n                alt='check'\n              />\n              ¡Sacá fotos grandes! Como mínimo deben tener 500 píxeles en uno de\n              sus lados. Te recomendamos 1200 x 1200, para que puedan hacer\n              zoom.\n            </p>\n            <p className='paragraph-with-icon bold'>\n              <img\n                src='https://svgshare.com/i/ULR.svg'\n                className='very-small absolute-left-top'\n                alt='check'\n              />\n              Mostrá tu producto desde diferentes ángulos.\n            </p>\n            <p className='paragraph-with-icon bold'>\n              <img\n                src='https://svgshare.com/i/ULR.svg'\n                className='very-small absolute-left-top'\n                alt='check'\n              />\n              Si necesitás mostrar cómo se ve tu producto en contexto, hacelo a\n              partir de tu segunda imagen.\n            </p>\n          </div>\n          <div className='half-body center'>\n            <img\n              className='medium'\n              src='https://svgshare.com/i/UN4.svg'\n              alt='Shoes'\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const changeCategorySign = () => (\n    <div id='change-category-sign' className='modal-bg hidden center'>\n      <div className='screen-mini-card small' ref={wrapperRefCategorySign}>\n        <div className='screen-mini-card-header-title'>\n          <h1>\n            Con este cambio, perderás todos los datos que ya habías completado\n          </h1>\n          <i\n            className='fas fa-times absolute-right less-right blue'\n            onClick={() => {\n              document.querySelector('#change-category-cancelbtn').click();\n            }}\n          ></i>\n        </div>\n        <div className='screen-mini-card-body padding column gap-2'>\n          <span className='subtle-text'>\n            Como estás modificando informacion que elegiste, tendrás que volver\n            a seleccionarla.\n          </span>\n          <div className='row flex-start gap-1'>\n            <button\n              className='primary'\n              onClick={() => {\n                setIsStateNew(null);\n                setImages([]);\n                setQuantity(0);\n                setCacheValues({\n                  name: searchSell,\n                  category: selectedCategory,\n                  isStateNew: null,\n                  quantity: 0,\n                  images: [],\n                });\n                dispatch(\n                  updateProductDrafts({\n                    name: searchSell,\n                    category: selectedCategory,\n                    _id: draftId ? draftId : null,\n                  })\n                );\n                setUpdatingImages(false);\n                document\n                  .querySelector('#change-category-sign')\n                  .classList.add('hidden');\n                setTimeout(() => {\n                  setShowChangeCategorySign(false);\n                }, 500);\n              }}\n            >\n              Aceptar\n            </button>\n            <button\n              id='change-category-cancelbtn'\n              className='secondary'\n              onClick={() => {\n                setSelectedCategory(cacheValues.category);\n                setCacheValues({\n                  ...cacheValues,\n                  name: searchSell,\n                });\n                dispatch(\n                  updateProductDrafts({\n                    ...cacheValues,\n                    name: searchSell,\n                    _id: draftId ? draftId : null,\n                  })\n                );\n                document\n                  .querySelector('#change-category-sign')\n                  .classList.add('hidden');\n                setTimeout(() => {\n                  setShowChangeCategorySign(false);\n                }, 500);\n              }}\n            >\n              Cancelar\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const addErrorToImageList = (errorImg, errorDetail) => {\n    const errorQuantity = document.querySelector('#error-list')\n      ? document.querySelector('#error-list').childElementCount + 1\n      : 1;\n    setImageError(\n      `${\n        errorQuantity + (errorQuantity > 1 ? ' fotos' : ' foto')\n      } no cumple los requisitos. Revisa los errores.`\n    );\n    document\n      .querySelector('#error-list')\n      .insertAdjacentHTML(\n        'beforeend',\n        `<li><div class='row flex-start list-item ${\n          document.querySelector('#error-list').childElementCount === 0\n            ? 'first-child'\n            : ''\n        }'><img class='center-cropped invalid-img'src='${errorImg}' alt='error'/><p class='bold'>${errorDetail}</p></div></li>`\n      );\n  };\n\n  return (\n    <>\n      {detailsError || error ? (\n        <div className='screen-mini-card medium'>\n          <MessageBox variant='danger'>{detailsError || error}</MessageBox>\n        </div>\n      ) : (\n        percentage >= 0 && (\n          <>\n            <div className='extra-header new-product'></div>\n            <div className='new-product-steps'>\n              <span>\n                <span className='step-number'>1</span>\n                Datos del producto\n              </span>\n              <div\n                className='progress-bar'\n                style={{ width: percentage + '%' }}\n              ></div>\n            </div>\n\n            <div className='column flex-start'>\n              <div\n                className='row width-100'\n                style={{ zIndex: '2', marginBottom: '6rem' }}\n              >\n                <div>\n                  <span className='subtle-text'>Paso 1 de 2</span>\n                  <h1 style={{ fontSize: '2.5rem' }}>\n                    Empecemos identificando tu producto\n                  </h1>\n                </div>\n                <img\n                  src='https://http2.mlstatic.com/secure/sell/images/shoe-v2.svg'\n                  alt='arte de zapato'\n                ></img>\n              </div>\n\n              <div\n                id='first-step'\n                className={\n                  'screen-mini-card medium' +\n                  (percentage > 16.5 && updateLoading ? ' disabled' : '')\n                }\n              >\n                {percentage >= 16.5 && firstStepHeader()}\n                <div className='screen-mini-card-body padding column'>\n                  {percentage < 16.5 ? (\n                    <h1>\n                      Indicá producto, marca, modelo y características\n                      principales\n                    </h1>\n                  ) : selectedCategory === null ? (\n                    <h1>¿Qué opción lo describe?</h1>\n                  ) : percentage < 33 ? (\n                    <h2>Confirma la categoría</h2>\n                  ) : (\n                    <h2>La categoría que elegiste</h2>\n                  )}\n                  {percentage < 16.5 && firstStepSearch()}\n                  {loading ? (\n                    <></>\n                  ) : error ? (\n                    <div className='screen-mini-card medium'>\n                      <MessageBox variant='danger'>{error}</MessageBox>\n                    </div>\n                  ) : (\n                    firstStepSelectCategory()\n                  )}\n                </div>\n                {selectedCategory !== null &&\n                  !loading &&\n                  percentage === 16.5 &&\n                  firstStepFooter()}\n              </div>\n              {percentage === 33 ? (\n                updateError ? (\n                  <div className='screen-mini-card medium'>\n                    <MessageBox variant='danger'>{updateError}</MessageBox>\n                  </div>\n                ) : updateLoading || draftId === null ? (\n                  secondStep('disabled')\n                ) : (\n                  secondStep()\n                )\n              ) : (\n                percentage > 33 &&\n                (updateLoading || draftId === null\n                  ? secondStep('disabled')\n                  : secondStep())\n              )}\n              {percentage >= 67 &&\n                (updateLoading || draftId === null ? (\n                  thirdStep('disabled')\n                ) : updateError ? (\n                  <div className='screen-mini-card medium'>\n                    <MessageBox variant='danger'>{updateError}</MessageBox>\n                  </div>\n                ) : (\n                  thirdStep()\n                ))}\n              {percentage === 100 && (\n                <div className='row flex-end width-100'>\n                  <button\n                    className='primary'\n                    disabled={updateLoading || updateError ? true : false}\n                    onClick={() => {\n                      document.querySelector('#siguiente-link').click();\n                    }}\n                  >\n                    Siguiente\n                  </button>\n                  <a\n                    id='siguiente-link'\n                    href={'/publicar?draft=' + draftId}\n                    hidden\n                  >\n                    Siguiente\n                  </a>\n                </div>\n              )}\n            </div>\n            {showHelpSign && helpSign()}\n            {showChangeCategorySign && changeCategorySign()}\n          </>\n        )\n      )}\n    </>\n  );\n};\n\nexport default NewProductScreen;\n","C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Screens\\LoginScreen.js",[],"C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Components\\Headers\\EmptyHeader.js",[],"C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Reducers\\productReducers.js",[],"C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Screens\\RegisterScreen.js",[],"C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Reducers\\categoryReducers.js",[],"C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Screens\\ProductScreen.js",[],"C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Components\\Headers\\LessHeader.js",[],"C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Screens\\HomeScreen.js",["140"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listProducts } from '../Actions/productActions';\nimport MessageBox from '../Components/MessageBox';\nimport Product from '../Components/Product';\n\nconst HomeScreen = (props) => {\n  const productList = useSelector((state) => state.productList);\n  const { loading, error, products } = productList;\n  const categoryList = useSelector((state) => state.categoryList);\n  const {\n    loading: categoryLoading,\n    error: categoryError,\n    categories,\n  } = categoryList;\n  const userLogin = useSelector((state) => state.userLogin);\n  const { user } = userLogin;\n  const [ammountToMove, setAmmountToMove] = useState(0);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(listProducts());\n  }, [dispatch]);\n  const moveList = (moveTo) => {\n    if (moveTo === 'forward') {\n      setAmmountToMove(\n        ammountToMove + (window.screen.width / devicePixelRatio) * 0.9375\n      );\n    } else {\n      setAmmountToMove(\n        ammountToMove - (window.screen.width / devicePixelRatio) * 0.9375\n      );\n    }\n  };\n  useEffect(() => {\n    if (\n      document.getElementById('product-cards') &&\n      document.getElementById('product-cards').offsetWidth <\n        ammountToMove + (window.screen.width / devicePixelRatio) * 0.9375\n    ) {\n      document.getElementById('card-next-button').style.display = 'none';\n    } else {\n      if (document.getElementById('card-next-button'))\n        document.getElementById('card-next-button').style.display = 'block';\n    }\n  }, [ammountToMove]);\n  return (\n    <>\n      {loading ? (\n        <></>\n      ) : error ? (\n        <MessageBox variant='danger'>{error}</MessageBox>\n      ) : (\n        <div\n          style={{\n            position: 'relative',\n            width: '120rem',\n          }}\n        >\n          {ammountToMove > 0 && (\n            <button\n              className='card-back-button'\n              onClick={() => moveList('backwards')}\n            ></button>\n          )}\n          <div className='product-list-container'>\n            <h1>Productos</h1>\n            <div\n              className='row top product-cards'\n              id='product-cards'\n              style={{\n                transform: 'translate3d(' + -ammountToMove + 'px, 0px, 0px)',\n              }}\n            >\n              {products.map((product) => (\n                <>\n                  <Product\n                    key={product._id}\n                    product={product}\n                    user={user && user}\n                    history={props.history}\n                  />\n                </>\n              ))}\n            </div>\n          </div>\n          <button\n            id='card-next-button'\n            className='card-next-button'\n            onClick={() => moveList('forward')}\n          ></button>\n        </div>\n      )}\n      {categoryLoading ? (\n        <></>\n      ) : categoryError ? (\n        <MessageBox variant='danger'>{categoryError}</MessageBox>\n      ) : (\n        <div></div>\n      )}\n    </>\n  );\n};\n\nexport default HomeScreen;\n","C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Screens\\DraftsScreen.js",[],"C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Screens\\EmailValidationScreen.js",[],"C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Components\\PrivateRoute.js",[],"C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Screens\\AddressScreen.js",[],"C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Components\\NotLogedRoute.js",[],"C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Screens\\PostScreen.js",["141","142","143","144","145"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  deleteAddresses,\n  deleteProductDrafts,\n  detailsUser,\n  updateProductDrafts,\n  addProducts,\n} from '../Actions/userActions';\nimport { formatNumber } from '../Utils/Utilities';\nimport { Redirect } from 'react-router-dom';\nimport MessageBox from '../Components/MessageBox';\nimport { createNewProduct } from '../Actions/productActions';\n\nconst PostScreen = (props) => {\n  const userLogin = useSelector((state) => state.userLogin);\n  const { loading, error, user } = userLogin;\n  const userDetails = useSelector((state) => state.userDetails);\n  const {\n    loading: loadingDetails,\n    error: errorDetails,\n    user: details,\n  } = userDetails;\n  const userUpdateProductDrafts = useSelector(\n    (state) => state.userUpdateProductDrafts\n  );\n  const {\n    loading: updateLoading,\n    error: updateError,\n  } = userUpdateProductDrafts;\n  const userDeleteProductDrafts = useSelector(\n    (state) => state.userDeleteProductDrafts\n  );\n  const { error: errorDeletingDraft, deleted } = userDeleteProductDrafts;\n  const newProduct = useSelector((state) => state.newProduct);\n  const { error: newProductError, product } = newProduct;\n  const userAddProducts = useSelector((state) => state.userAddProducts);\n  const { error: errorAddingProduct, added } = userAddProducts;\n\n  const dispatch = useDispatch();\n  const urlParams = new URLSearchParams(props.location.search);\n  const draftId = urlParams.get('draft');\n  const [draftValues, setDraftValues] = useState(null);\n  const [percentage, setPercentage] = useState(0);\n  const [maxPercentage, setMaxPercentage] = useState(0);\n  const [selectedAddress, setSelectedAddress] = useState(null);\n  const [price, setPrice] = useState(0);\n  const [priceError, setPriceError] = useState('');\n  const [justShipping, setJustShipping] = useState(null);\n  const [description, setDescription] = useState('');\n  const [video, setVideo] = useState('');\n  const [videoError, setVideoError] = useState('');\n\n  const [updatingData, setUpdatingData] = useState(false);\n  const [descriptionCardOpen, setDescriptionCardOpen] = useState(false);\n  const [videoCardOpen, setVideoCardOpen] = useState(false);\n  const [editingDescription, setEditingDescription] = useState(false);\n  const [editingVideo, setEditingVideo] = useState(false);\n  const [validVideoId, setValidVideoId] = useState('');\n\n  useEffect(() => {\n    const handleScroll = () => {\n      if (window.scrollY >= 175) {\n        if (document.querySelector('.new-product-steps'))\n          document.querySelector('.new-product-steps').style.transform =\n            'translateY(5.5rem)';\n      } else {\n        if (document.querySelector('.new-product-steps'))\n          document.querySelector('.new-product-steps').style.transform =\n            'translateY(0)';\n      }\n    };\n    document.addEventListener('scroll', handleScroll);\n  }, []);\n\n  useEffect(() => {\n    const values =\n      details &&\n      !loadingDetails &&\n      !updateLoading &&\n      details.productDrafts.find((draft) => draft._id.toString() === draftId);\n    values && setDraftValues(values);\n  }, [details, draftId, loadingDetails, updateLoading]);\n\n  useEffect(() => {\n    if (draftValues) {\n      if (draftValues.address !== null) {\n        setSelectedAddress(draftValues.address);\n        setPercentage(25);\n      }\n      if (draftValues.price) {\n        setPrice(draftValues.price);\n        setPercentage(50);\n      }\n      if (draftValues.justShipping !== null) {\n        setJustShipping(draftValues.justShipping);\n        setPercentage(75);\n      }\n      if (draftValues.description) {\n        setDescription(draftValues.description);\n        setDescriptionCardOpen(true);\n      }\n      if (draftValues.video) {\n        setVideo(draftValues.video);\n        setVideoCardOpen(true);\n        setValidVideoId(draftValues.video.split('v=')[1]);\n      }\n    }\n    setUpdatingData(false);\n  }, [draftValues]);\n  useEffect(() => {\n    percentage > maxPercentage && setMaxPercentage(percentage);\n  }, [percentage, maxPercentage]);\n\n  useEffect(() => {\n    switch (percentage) {\n      case 0:\n        document.querySelector('#first-step') &&\n          document.querySelector('#first-step').scrollIntoView();\n        break;\n      case 25:\n        document.querySelector('#first-step') &&\n          document.querySelector('#first-step').scrollIntoView();\n        break;\n      case 50:\n        if (!updatingData) {\n          document.querySelector('#second-step') &&\n            document.querySelector('#second-step').scrollIntoView();\n        }\n        break;\n      case 75:\n        !updatingData &&\n          document.querySelector('#third-step') &&\n          document.querySelector('#third-step').scrollIntoView();\n        break;\n      default:\n        break;\n    }\n  }, [percentage, updatingData]);\n\n  useEffect(() => {\n    user && dispatch(detailsUser(user._id));\n  }, [dispatch, user]);\n\n  useEffect(() => {\n    (updateLoading || loadingDetails) && setUpdatingData(true);\n  }, [updateLoading, loadingDetails]);\n\n  useEffect(() => {\n    if (deleted && !product) {\n      dispatch(createNewProduct(draftValues));\n    }\n  }, [deleted, draftValues, dispatch]);\n\n  useEffect(() => {\n    if (product) {\n      dispatch(addProducts(product._id));\n    }\n  }, [product, dispatch]);\n\n  useEffect(() => {\n    added && props.history.push('vender/producto-publicado');\n  }, [added]);\n\n  const validateVideoId = (id) => {\n    var img = new Image();\n    img.src = 'http://img.youtube.com/vi/' + id + '/mqdefault.jpg';\n    img.onload = function () {\n      if (this.width === 120) {\n        setValidVideoId('');\n        setVideoError('Solo podés agregar links a videos de YouTube.');\n      } else {\n        setValidVideoId(id);\n        setVideoError('');\n      }\n    };\n  };\n  const displayAddresses = () => {\n    const addressesForReturn = [];\n    details &&\n      details.addresses.map((address, i) =>\n        addressesForReturn.push(\n          <li\n            className={\n              'list-relative multiple-selection-btn' +\n              (selectedAddress === address._id ? ' selected' : '')\n            }\n            key={i}\n          >\n            <div className='list-item padding'>\n              <a\n                className='nodecoration'\n                href='#Select-address'\n                onClick={() => {\n                  setSelectedAddress(address._id);\n                  dispatch(\n                    updateProductDrafts({\n                      ...draftValues,\n                      address: address._id,\n                    })\n                  );\n                }}\n              >\n                <h4>\n                  {address.street +\n                    ' ' +\n                    (address.streetNumber ? address.streetNumber : '')}\n                </h4>\n                <br />\n                <span className='subtle-text'>\n                  {address.city + ', ' + address.province}\n                </span>\n              </a>\n              <br />\n              <a\n                className='small'\n                onClick={() => {\n                  localStorage.setItem(\n                    'currentAddress',\n                    JSON.stringify(address)\n                  );\n                }}\n                href={'/nueva-direccion?draft=' + draftId}\n              >\n                Modificar\n              </a>\n              <button\n                className='list-delete absolute-right'\n                onClick={() => {\n                  dispatch(deleteAddresses(address._id));\n                  if (address._id === selectedAddress) {\n                    setSelectedAddress('');\n                    setPercentage(0);\n                    dispatch(\n                      updateProductDrafts({\n                        ...draftValues,\n                        address: null,\n                      })\n                    );\n                  }\n                }}\n              >\n                <img\n                  className='small'\n                  src='https://svgshare.com/i/UJB.svg'\n                  alt='Boton borrar'\n                />\n              </button>\n            </div>\n          </li>\n        )\n      );\n    return addressesForReturn;\n  };\n\n  const firstStep = (status) => {\n    return (\n      <div\n        id='first-step'\n        className={\n          'screen-mini-card medium' + (status === 'disabled' ? ' disabled' : '')\n        }\n      >\n        <div className='screen-mini-card-header-title'>\n          <h4>Dirección de la venta</h4>\n        </div>\n        {details &&\n          (details.addresses.length > 0 ? (\n            <ul>{displayAddresses()}</ul>\n          ) : (\n            <div className='screen-mini-card-body padding'>\n              <h4>No tenés ninguna dirección registrada</h4>\n            </div>\n          ))}\n        <div className='screen-mini-card-footer'>\n          <a\n            onClick={() => {\n              localStorage.removeItem('currentAddress');\n            }}\n            href={'/nueva-direccion?draft=' + draftId}\n          >\n            Cargar nueva dirección\n          </a>\n        </div>\n      </div>\n    );\n  };\n  const secondStep = (status) => {\n    return (\n      <div\n        id='second-step'\n        className={\n          'screen-mini-card medium' + (status === 'disabled' ? ' disabled' : '')\n        }\n      >\n        <div className='screen-mini-card-header-title'>\n          <h4>¿Cuál es el precio?</h4>\n        </div>\n        <div className='screen-mini-card-body padding'>\n          <div className='wrapper sell'>\n            <div className='underline-label-input'>\n              <input\n                placeholder='$'\n                type='text'\n                maxLength='12'\n                className={priceError ? 'error' : ''}\n                value={'$ ' + (price > 0 ? formatNumber(price) : '')}\n                onChange={(e) => {\n                  setPercentage(25);\n                  setPrice(\n                    e.target.value.split('$ ')[1]\n                      ? e.target.value.split('$ ')[1].split('.').join('')\n                      : 0\n                  );\n                  if (e.target.value.length === 2 || e.target.value === '$ ') {\n                    setPriceError('El precio mínimo es 1.');\n                  } else {\n                    setPriceError('');\n                  }\n                }}\n                onKeyDown={(e) => {\n                  if (\n                    !(\n                      (e.keyCode >= 48 && e.keyCode <= 57) ||\n                      e.keyCode === 8 ||\n                      e.keyCode === 37 ||\n                      e.keyCode === 39 ||\n                      e.keyCode === 46\n                    )\n                  )\n                    e.preventDefault();\n                }}\n              ></input>\n              <div className={'underline' + (priceError ? ' error' : '')}></div>\n              <span\n                className={'subtle-text' + (priceError ? ' error' : ' noerror')}\n              >\n                {priceError && priceError}\n              </span>\n            </div>\n          </div>\n        </div>\n        {percentage === 25 && maxPercentage >= 25 && (\n          <div className='screen-mini-card-footer flex-end'>\n            <button\n              className='secondary'\n              disabled={price > 0 ? false : true}\n              onClick={() => {\n                setPrice(draftValues.price ? draftValues.price : 0);\n                setPercentage(maxPercentage);\n              }}\n            >\n              Cancelar\n            </button>\n            <button\n              className='primary'\n              disabled={price > 0 ? false : true}\n              onClick={() => {\n                dispatch(\n                  updateProductDrafts({\n                    ...draftValues,\n                    price,\n                  })\n                );\n              }}\n            >\n              Confirmar\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  const thirdStep = (status) => {\n    return (\n      <div\n        id='third-step'\n        className={\n          'screen-mini-card medium' + (status === 'disabled' ? ' disabled' : '')\n        }\n      >\n        <div className='screen-mini-card-header-title'>\n          <h4>¿Querés ofrecer retiro en persona?</h4>\n        </div>\n        <ul>\n          <li\n            className={\n              'list-relative multiple-selection-btn' +\n              (justShipping === false ? ' selected' : '')\n            }\n          >\n            <button\n              className='list-item padding'\n              onClick={() => {\n                if (justShipping !== false) {\n                  setJustShipping(false);\n                  dispatch(\n                    updateProductDrafts({\n                      ...draftValues,\n                      justShipping: false,\n                    })\n                  );\n                }\n              }}\n            >\n              Sí, ofrezco retiro en persona.\n            </button>\n          </li>\n          <li\n            className={\n              'list-relative multiple-selection-btn' +\n              (justShipping === true ? ' selected' : '')\n            }\n          >\n            <button\n              className='list-item padding'\n              onClick={() => {\n                if (justShipping !== true) {\n                  setJustShipping(true);\n                  dispatch(\n                    updateProductDrafts({\n                      ...draftValues,\n                      justShipping: true,\n                    })\n                  );\n                }\n              }}\n            >\n              No, solo hago envíos.\n            </button>\n          </li>\n        </ul>\n      </div>\n    );\n  };\n\n  const fourthStep = (status) => {\n    return (\n      <div\n        className={\n          'screen-mini-card medium' +\n          (!descriptionCardOpen ? ' dashed' : '') +\n          (status === 'disabled' ? ' disabled' : '')\n        }\n        onClick={() => setDescriptionCardOpen(true)}\n      >\n        <div className='screen-mini-card-header-title'>\n          <h4>¿Querés agregar una descripción?</h4>\n          <span className='subtle-text no-user-select'>{' | (opcional)'}</span>\n          {!descriptionCardOpen && (\n            <img\n              className='absolute-right small mouse-pointer'\n              src='https://svgshare.com/i/VnK.svg'\n              alt='plus sign'\n            ></img>\n          )}\n        </div>\n        {descriptionCardOpen && (\n          <>\n            <div className='screen-mini-card-body padding column'>\n              <div className='message-div blue row'>\n                <p className='paragraph-with-icon bold'>\n                  <img\n                    src='https://svgshare.com/i/UNm.svg'\n                    alt='tip'\n                    className='absolute-left-top circle badge'\n                  />\n                  No incluyas datos de contacto, como e-mails, teléfonos,\n                  direcciones, links ni referencias a sitios externos. Tampoco\n                  uses este espacio para indicar la condición de tu producto.\n                  <a href='#verpolitica'> Ver política</a>\n                </p>\n              </div>\n              <textarea\n                value={description}\n                onChange={(e) => {\n                  setEditingDescription(true);\n                  setDescription(e.target.value);\n                }}\n                maxLength='50000'\n                placeholder='¿Te faltó algo? Agregalo como descripción.'\n              ></textarea>\n            </div>\n            {editingDescription && (\n              <div className='screen-mini-card-footer flex-end'>\n                <button\n                  className='secondary'\n                  disabled={price > 0 ? false : true}\n                  onClick={() => {\n                    setEditingDescription(false);\n                    setDescription(\n                      draftValues.description ? draftValues.description : ''\n                    );\n                  }}\n                >\n                  Cancelar\n                </button>\n                <button\n                  className='primary'\n                  disabled={price > 0 ? false : true}\n                  onClick={() => {\n                    setEditingDescription(false);\n                    dispatch(\n                      updateProductDrafts({\n                        ...draftValues,\n                        description,\n                      })\n                    );\n                  }}\n                >\n                  Confirmar\n                </button>\n              </div>\n            )}\n          </>\n        )}\n      </div>\n    );\n  };\n\n  const fifthStep = (status) => {\n    return (\n      <div\n        className={\n          'screen-mini-card medium' +\n          (videoCardOpen ? '' : ' dashed') +\n          (status === 'disabled' ? ' disabled' : '')\n        }\n        onClick={() => setVideoCardOpen(true)}\n      >\n        <div className='screen-mini-card-header-title'>\n          <h4>¿Querés agregar un video?</h4>\n          <span className='subtle-text no-user-select'>{' | (opcional)'}</span>\n          {!videoCardOpen && (\n            <img\n              className='absolute-right small mouse-pointer'\n              src='https://svgshare.com/i/VnK.svg'\n              alt='plus sign'\n            ></img>\n          )}\n        </div>\n        {videoCardOpen && (\n          <>\n            <div className='screen-mini-card-body padding column'>\n              <div className='wrapper width-100 margin-bottom'>\n                <div className='underline-label-input'>\n                  <input\n                    placeholder='Ej.: https://www.youtube.com/watch?v=K7sFmiFfl0g'\n                    type='text'\n                    className={videoError ? 'error' : ''}\n                    value={video}\n                    maxLength='120'\n                    onChange={(e) => {\n                      setEditingVideo(true);\n                      setVideo(e.target.value);\n                      var videoId = e.target.value.split(\n                        'youtube.com/watch?v='\n                      )[1];\n                      if (\n                        videoId &&\n                        (videoId.substring(11, 12).includes('?') ||\n                          videoId.substring(11, 12).includes('&') ||\n                          videoId.length === 11)\n                      ) {\n                        setVideoError('');\n                        validateVideoId(videoId.substring(0, 11));\n                      } else {\n                        setVideoError(\n                          'Solo podés agregar links a videos de YouTube.'\n                        );\n                        setValidVideoId('');\n                      }\n                    }}\n                  ></input>\n                  <div\n                    className={'underline' + (videoError ? ' error' : '')}\n                  ></div>\n                  <span\n                    className={\n                      'subtle-text' + (videoError ? ' error' : ' noerror')\n                    }\n                  >\n                    {videoError && videoError}\n                  </span>\n                  {!videoError && (\n                    <span className='reg-info-after'>\n                      Pegá acá el link de YouTube.\n                    </span>\n                  )}\n                </div>\n              </div>\n              {validVideoId !== '' && (\n                <iframe\n                  className='margin-top'\n                  title='Video seleccionado'\n                  src={'https://www.youtube.com/embed/' + validVideoId}\n                  allow='autoplay; encrypted-media'\n                  frameBorder='0'\n                  height='390px'\n                  width='100%'\n                ></iframe>\n              )}\n            </div>\n            {editingVideo && (\n              <div className='screen-mini-card-footer flex-end'>\n                <button\n                  className='secondary'\n                  disabled={price > 0 ? false : true}\n                  onClick={() => {\n                    setVideo(draftValues.video ? draftValues.video : '');\n                    setPercentage(maxPercentage);\n                    setVideoError('');\n                    setEditingVideo(false);\n                  }}\n                >\n                  Cancelar\n                </button>\n                <button\n                  className='primary'\n                  disabled={validVideoId ? false : true}\n                  onClick={() => {\n                    dispatch(\n                      updateProductDrafts({\n                        ...draftValues,\n                        video:\n                          'https://www.youtube.com/watch?v=' + validVideoId,\n                      })\n                    );\n                    setEditingVideo(false);\n                  }}\n                >\n                  Confirmar\n                </button>\n              </div>\n            )}\n          </>\n        )}\n      </div>\n    );\n  };\n\n  const postBtn = (status) => {\n    return (\n      <div\n        className={\n          'width-100 flex-end' + (status === 'disabled' ? ' disabled' : '')\n        }\n      >\n        {!errorDeletingDraft ? (\n          <button\n            className='primary'\n            onClick={() => {\n              dispatch(deleteProductDrafts(draftId));\n            }}\n            disabled={updatingData}\n          >\n            Publicar\n          </button>\n        ) : (\n          <MessageBox variant='danger'>{errorDeletingDraft}</MessageBox>\n        )}\n      </div>\n    );\n  };\n\n  return (\n    <>\n      {!draftId || (details && draftValues === undefined) ? (\n        <Redirect to='vender/producto'></Redirect>\n      ) : (\n        draftValues &&\n        (!(draftValues.images.length > 0 && draftValues.stock > 0) ? (\n          <Redirect to={'vender/producto?draft=' + draftId}></Redirect>\n        ) : error ? (\n          <MessageBox>{error}</MessageBox>\n        ) : errorDetails ? (\n          <MessageBox>{errorDetails}</MessageBox>\n        ) : (\n          <>\n            <div className='extra-header new-product'></div>\n            <div className='new-product-steps'>\n              <span>\n                <span className='step-number'>2</span>\n                Condiciones de venta\n              </span>\n              <div\n                className='progress-bar'\n                style={{ width: percentage + '%' }}\n              ></div>\n            </div>\n            <div className='column flex-start'>\n              <a\n                className='margin-bottom'\n                href={'/vender/producto?draft=' + draftId}\n                style={{ zIndex: '2' }}\n              >\n                {'<  Anterior'}\n              </a>\n              <div\n                className='row width-100'\n                style={{ zIndex: '2', marginBottom: '6rem' }}\n              >\n                <div>\n                  <span className='subtle-text'>Paso 2 de 2</span>\n                  <h1 style={{ fontSize: '2.5rem' }}>\n                    Para terminar,\n                    <br /> definamos las condiciones de venta\n                  </h1>\n                </div>\n                <img\n                  src='https://http2.mlstatic.com/secure/sell/images/notebook-v2.svg'\n                  alt='arte de zapato'\n                ></img>\n              </div>\n              {updatingData ? (\n                firstStep('disabled')\n              ) : updateError ? (\n                <MessageBox variant='danger'>{updateError}</MessageBox>\n              ) : (\n                firstStep()\n              )}\n              {updatingData && percentage >= 25 ? (\n                secondStep('disabled')\n              ) : percentage === 25 && updateError ? (\n                <MessageBox variant='danger'>{updateError}</MessageBox>\n              ) : percentage >= 25 ? (\n                secondStep()\n              ) : (\n                maxPercentage >= 25 && secondStep('disabled')\n              )}\n              {updatingData && percentage >= 50 ? (\n                thirdStep('disabled')\n              ) : percentage === 50 && updateError ? (\n                <MessageBox variant='danger'>{updateError}</MessageBox>\n              ) : percentage >= 50 ? (\n                thirdStep()\n              ) : (\n                maxPercentage >= 50 && thirdStep('disabled')\n              )}\n              {updatingData && percentage >= 75 ? (\n                fourthStep('disabled')\n              ) : percentage === 75 && updateError ? (\n                <MessageBox variant='danger'>{updateError}</MessageBox>\n              ) : percentage >= 75 ? (\n                fourthStep()\n              ) : (\n                maxPercentage >= 75 && fourthStep('disabled')\n              )}\n              {updatingData && percentage >= 75 ? (\n                fifthStep('disabled')\n              ) : percentage === 75 && updateError ? (\n                <MessageBox variant='danger'>{updateError}</MessageBox>\n              ) : percentage >= 75 ? (\n                fifthStep()\n              ) : (\n                maxPercentage >= 75 && fifthStep('disabled')\n              )}\n              {percentage >= 75 &&\n                (!editingDescription && !editingVideo\n                  ? postBtn()\n                  : postBtn('disabled'))}\n            </div>\n          </>\n        ))\n      )}\n    </>\n  );\n};\n\nexport default PostScreen;\n","C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Components\\MessageBox.js",[],"C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Components\\Product.js",[],"C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Components\\Rating.js",[],"C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Actions\\userActions.js",["146"],"import Axios from 'axios';\n\nexport const detailsUser = (userId) => async (dispatch) => {\n  dispatch({ type: 'USER_DETAILS_REQUEST' });\n  try {\n    const { data } = await Axios.get('/api/users/' + userId);\n    dispatch({ type: 'USER_DETAILS_SUCCESS', payload: data });\n  } catch (error) {\n    dispatch({\n      type: 'USER_DETAILS_FAIL',\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const checkUserName = (loginInfo) => async (dispatch) => {\n  dispatch({ type: 'USER_CHECKNAME_REQUEST' });\n  try {\n    const { data } = await Axios.post('/api/users/checkname', { loginInfo });\n    dispatch({ type: 'USER_CHECKNAME_SUCCESS', payload: data });\n    localStorage.setItem('userCheckNameInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: 'USER_CHECKNAME_FAIL',\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const loginUser = (user) => async (dispatch) => {\n  dispatch({ type: 'USER_lOGIN_REQUEST' });\n  try {\n    const { data } = await Axios.post('/api/users/login', user);\n    localStorage.setItem('userInfo', JSON.stringify(data));\n    dispatch({ type: 'USER_LOGIN_SUCCESS', payload: data });\n  } catch (error) {\n    dispatch({\n      type: 'USER_LOGIN_FAIL',\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateUserFavorites = (updateFav) => async (\n  dispatch,\n  getState\n) => {\n  const {\n    userLogin: { user },\n  } = getState();\n  dispatch({ type: 'UPDATE_USER_FAVORITES_REQUEST' });\n  try {\n    const { data } = await Axios.post(\n      '/api/users/updatefavs',\n      { user, updateFav },\n      { headers: { Authorization: 'Bearer ' + user.token } }\n    );\n    dispatch({ type: 'UPDATE_USER_FAVORITES_SUCCESS', payload: data });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n    dispatch({ type: 'USER_LOGIN_SUCCESS', payload: data });\n  } catch (error) {\n    dispatch({\n      type: 'UPDATE_USER_FAVORITES_FAIL',\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const userVerifyEmailExists = (email) => async (dispatch) => {\n  dispatch({ type: 'USER_VERIFYEMAILEXISTS_REQUEST' });\n  try {\n    const { data } = await Axios.post('/api/users/verifyemailexists', {\n      email,\n    });\n    dispatch({ type: 'USER_VERIFYEMAILEXISTS_SUCCESS', payload: data });\n    localStorage.setItem('verifyEmail', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: 'USER_VERIFYEMAILEXISTS_FAIL',\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const registerUser = (newUser) => async (dispatch) => {\n  dispatch({ type: 'USER_REGISTER_REQUEST' });\n  try {\n    const { data } = await Axios.post('/api/users/register', newUser);\n    dispatch({ type: 'USER_REGISTER_SUCCESS', payload: data });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n    dispatch({ type: 'USER_LOGIN_SUCCESS', payload: data });\n  } catch (error) {\n    dispatch({\n      type: 'USER_REGISTER_FAIL',\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateProductDrafts = (draft) => async (dispatch, getState) => {\n  const {\n    userLogin: { user },\n  } = getState();\n  dispatch({ type: 'USER_UPDATE_PRODUCT_DRAFTS_REQUEST' });\n  try {\n    const { data } = await Axios.post(\n      '/api/users/updateProductDrafts',\n      {\n        draft,\n        user,\n      },\n      { headers: { Authorization: 'Bearer ' + user.token } }\n    );\n    dispatch({ type: 'USER_UPDATE_PRODUCT_DRAFTS_SUCCESS', payload: data });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n    dispatch({ type: 'USER_LOGIN_SUCCESS', payload: data });\n  } catch (error) {\n    dispatch({\n      type: 'USER_UPDATE_PRODUCT_DRAFTS_FAIL',\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const deleteProductDrafts = (draftId) => async (dispatch, getState) => {\n  const {\n    userLogin: { user },\n  } = getState();\n  dispatch({ type: 'USER_DELETE_PRODUCT_DRAFTS_REQUEST' });\n  try {\n    const { data } = await Axios.post(\n      '/api/users/deleteProductDrafts',\n      {\n        draftId,\n        user,\n      },\n      { headers: { Authorization: 'Bearer ' + user.token } }\n    );\n    dispatch({ type: 'USER_DELETE_PRODUCT_DRAFTS_SUCCESS', payload: data });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n    dispatch({ type: 'USER_LOGIN_SUCCESS', payload: data });\n  } catch (error) {\n    dispatch({\n      type: 'USER_DELETE_PRODUCT_DRAFTS_FAIL',\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const addProducts = (productId) => async (dispatch, getState) => {\n  const {\n    userLogin: { user },\n  } = getState();\n  dispatch({ type: 'USER_ADD_PRODUCTS_REQUEST' });\n  try {\n    const { data } = await Axios.post(\n      '/api/users/addProducts',\n      {\n        productId,\n        user,\n      },\n      { headers: { Authorization: 'Bearer ' + user.token } }\n    );\n    dispatch({ type: 'USER_ADD_PRODUCTS_SUCCESS' });\n  } catch (error) {\n    dispatch({\n      type: 'USER_ADD_PRODUCTS_FAIL',\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const updateAddresses = (address) => async (dispatch, getState) => {\n  const {\n    userLogin: { user },\n  } = getState();\n  dispatch({ type: 'USER_UPDATE_ADDRESSES_REQUEST' });\n  try {\n    const { data } = await Axios.post(\n      '/api/users/updateAddresses',\n      {\n        address,\n        user,\n      },\n      { headers: { Authorization: 'Bearer ' + user.token } }\n    );\n    dispatch({ type: 'USER_UPDATE_ADDRESSES_SUCCESS', payload: data });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n    dispatch({ type: 'USER_LOGIN_SUCCESS', payload: data });\n  } catch (error) {\n    dispatch({\n      type: 'USER_UPDATE_ADDRESSES_FAIL',\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const deleteAddresses = (addressId) => async (dispatch, getState) => {\n  const {\n    userLogin: { user },\n  } = getState();\n  dispatch({ type: 'USER_DELETE_ADDRESSES_REQUEST' });\n  try {\n    const { data } = await Axios.post(\n      '/api/users/deleteAddresses',\n      {\n        addressId,\n        user,\n      },\n      { headers: { Authorization: 'Bearer ' + user.token } }\n    );\n    dispatch({ type: 'USER_DELETE_ADDRESSES_SUCCESS', payload: data });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n    dispatch({ type: 'USER_LOGIN_SUCCESS', payload: data });\n  } catch (error) {\n    dispatch({\n      type: 'USER_DELETE_ADDRESSES_FAIL',\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n","C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Actions\\productActions.js",[],"C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Utils\\Utilities.js",[],["147","148"],"C:\\Users\\Manu\\Desktop\\VS Code\\Heroku-react\\src\\Actions\\categoryActions.js",[],{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":17,"column":14,"nodeType":"155","messageId":"156","endLine":17,"endColumn":28},{"ruleId":"157","severity":1,"message":"158","line":200,"column":6,"nodeType":"159","endLine":200,"endColumn":15,"suggestions":"160"},{"ruleId":"153","severity":1,"message":"161","line":14,"column":5,"nodeType":"155","messageId":"156","endLine":14,"endColumn":15},{"ruleId":"153","severity":1,"message":"162","line":17,"column":11,"nodeType":"155","messageId":"156","endLine":17,"endColumn":18},{"ruleId":"153","severity":1,"message":"163","line":36,"column":18,"nodeType":"155","messageId":"156","endLine":36,"endColumn":33},{"ruleId":"153","severity":1,"message":"164","line":38,"column":18,"nodeType":"155","messageId":"156","endLine":38,"endColumn":36},{"ruleId":"157","severity":1,"message":"165","line":153,"column":6,"nodeType":"159","endLine":153,"endColumn":38,"suggestions":"166"},{"ruleId":"157","severity":1,"message":"167","line":163,"column":6,"nodeType":"159","endLine":163,"endColumn":13,"suggestions":"168"},{"ruleId":"153","severity":1,"message":"169","line":180,"column":13,"nodeType":"155","messageId":"156","endLine":180,"endColumn":17},{"ruleId":"149","replacedBy":"170"},{"ruleId":"151","replacedBy":"171"},"no-native-reassign",["172"],"no-negated-in-lhs",["173"],"no-unused-vars","'loadingDetails' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'draftId', 'percentage', and 'props.history'. Either include them or remove the dependency array.","ArrayExpression",["174"],"'categories' is assigned a value but never used.","'loading' is assigned a value but never used.","'newProductError' is assigned a value but never used.","'errorAddingProduct' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'product'. Either include it or remove the dependency array.",["175"],"React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["176"],"'data' is assigned a value but never used.",["172"],["173"],"no-global-assign","no-unsafe-negation",{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},"Update the dependencies array to be: [details, draftId, percentage, props.history]",{"range":"183","text":"184"},"Update the dependencies array to be: [deleted, draftValues, dispatch, product]",{"range":"185","text":"186"},"Update the dependencies array to be: [added, props.history]",{"range":"187","text":"188"},[6976,6985],"[details, draftId, percentage, props.history]",[5188,5220],"[deleted, draftValues, dispatch, product]",[5426,5433],"[added, props.history]"]